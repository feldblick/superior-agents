services:
  meta-swap-api:
    image: superioragents/meta-swap-api
    build:
      context: meta-swap-api
      dockerfile: Dockerfile
    env_file:
      - meta-swap-api/.env.example
    ports:
      - "${TRADE_API_PORT:-9009}:${TRADE_API_PORT:-9009}"
    restart: unless-stopped

  # agent-daemon:
  #   image: superioragents/agent-daemon
  #   build:
  #     context: ./agent
  #     dockerfile: Dockerfile
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #   env_file:
  #     - agent/.example.env
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   restart: unless-stopped
  #   depends_on:
  #     - crud-api
  #     - manager-service
  #     - meta-swap-api

  # manager-service:
  #   image: superioragents/manager-service
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   env_file:
  #     - server/.example.env
  #   ports:
  #     - "${AGENT_SCHEDULER_PORT}:${AGENT_SCHEDULER_PORT}"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - redis
  #   restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=superioragents
      - MYSQL_PASSWORD=superioragents
      - MYSQL_DATABASE=superioragents
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  rest-api:
    image: superioragents/crud-api
    build:
      context: crud-api
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=superioragents
      - MYSQL_PASSWORD=superioragents
      - MYSQL_DATABASE=superioragents
      - API_KEY=${API_KEY:-local}
    ports:
      - "${REST_API_PORT:-9020}:${REST_API_PORT:-9020}"
    depends_on:
      - mysql
    restart: unless-stopped

  # frontend:
  #   image: superioragents/frontend
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   env_file:
  #     - frontend/.example.env
  #   ports:
  #     - "${FRONTEND_PORT}:${FRONTEND_PORT}"
  #   restart: unless-stopped

  # notification:
  #   build:
  #     context: .
  #     dockerfile: notification/Dockerfile
  #   environment:
  #     - PORT=${NOTIFICATION_PORT}
  #   ports:
  #     - "${NOTIFICATION_PORT}:${NOTIFICATION_PORT}"
  #   networks:
  #     - app-network

volumes:
  redis_data:
  mysql_data:
